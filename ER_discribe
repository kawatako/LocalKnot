各テーブルの説明

1. User (ユーザー)
役割: アプリケーションに登録するユーザーの基本情報を格納するテーブルです。
カラム:
id (integer, 主キー): ユーザーの一意の識別子。
email (varchar): ユーザーのメールアドレス（ログインIDとして使用）。
password (varchar): パスワード（実際には保存されず、encrypted_password が使用される）。
encrypted_password (varchar): 暗号化されたパスワード（Deviseによって自動的に生成・管理される）。
reset_password_token (varchar): パスワードリセット用のトークン（Deviseが使用）。
reset_password_sent_at (datetime): パスワードリセットメール送信日時（Deviseが使用）。
remember_created_at (datetime): ログイン状態の保持（Remember Me機能）に使用される日時（Deviseが使用）。
notification_enabled (boolean): 通知の受信可否設定（デフォルトは true で受信する）。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
Profile と1対1 (has_one :profile, dependent: :destroy)
Blog と1対多 (has_many :blogs, dependent: :destroy)
Question と1対多 (has_many :questions, dependent: :destroy)
Answer と1対多 (has_many :answers, dependent: :destroy)
BlogLike と1対多 (has_many :blog_likes, dependent: :destroy)
AnswerLike と1対多 (has_many :answer_likes, dependent: :destroy)
BlogComment と1対多 (has_many :blog_comments, dependent: :destroy)
Notification と1対多 (has_many :notifications, foreign_key: :recipient_id, dependent: :destroy および has_many :sent_notifications, class_name: "Notification", foreign_key: :actor_id, dependent: :destroy)

2. Profile (プロフィール)
役割: ユーザーのプロフィール情報を格納するテーブルです。User テーブルと1対1で関連付けられます。
カラム:
id (integer, 主キー): プロフィールの一意の識別子。
user_id (integer, 外部キー): 関連するユーザーの id。
user_name (string): ユーザー名。
body (text): 自己紹介文。
profile_image (varchar): プロフィール画像のファイル名（Active Storageで管理）。
sex (integer): 性別（例：0: 男性、1: 女性、2: その他）。
age (integer): 年齢。
sns_links (json): SNSアカウントへのリンク（JSON形式で保存）。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対1 (belongs_to :user)

3. Blog (ブログ)
役割: ユーザーが投稿するブログ記事の情報を格納するテーブルです。
カラム:
id (integer, 主キー): ブログ記事の一意の識別子。
user_id (integer, 外部キー): 記事を投稿したユーザーの id。
title (varchar): ブログ記事のタイトル。
body (text): ブログ記事の本文（Action Textで管理され、画像を含むリッチテキスト）。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Category と多対多 (has_many :categorizables, as: :categorizable, dependent: :destroy, has_many :categories, through: :categorizables)
Area と多対多 (has_many :localizations, as: :localizable, dependent: :destroy, has_many :areas, through: :localizations)
BlogLike と1対多 (has_many :blog_likes, dependent: :destroy)
BlogComment と1対多 (has_many :blog_comments, dependent: :destroy)
ActionText::RichText と1対1 (has_rich_text :body)

4. Question (質問)
役割: ユーザーが投稿する質問の情報を格納するテーブルです。
カラム:
id (integer, 主キー): 質問の一意の識別子。
user_id (integer, 外部キー): 質問を投稿したユーザーの id。
title (varchar): 質問のタイトル。
body (text): 質問の本文。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Category と多対多 (has_many :categorizables, as: :categorizable, dependent: :destroy, has_many :categories, through: :categorizables)
Area と多対多 (has_many :localizations, as: :localizable, dependent: :destroy, has_many :areas, through: :localizations)
Answer と1対多 (has_many :answers, dependent: :destroy)

5. Answer (回答)
役割: ユーザーが質問に対して投稿する回答の情報を格納するテーブルです。
カラム:
id (integer, 主キー): 回答の一意の識別子。
user_id (integer, 外部キー): 回答を投稿したユーザーの id。
question_id (integer, 外部キー): 回答が紐づく質問の id。
body (text): 回答の本文。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Question と1対多 (belongs_to :question)
AnswerLike と1対多 (has_many :answer_likes, dependent: :destroy)

6. Notification (通知)
役割: ユーザーへの通知情報を格納するテーブルです。
カラム:
id (integer, 主キー): 通知の一意の識別子。
recipient_id (integer, 外部キー): 通知を受け取るユーザーの id。
actor_id (integer, 外部キー): 通知を発生させたユーザーの id。
read_at (datetime): 通知が既読になった日時（今回は使用しない）。
action (varchar): 行為の種類（例："answered", "liked", "commented"）。
notifiable_type (varchar): 通知対象のモデル名（例："Question", "Answer", "Blog"）。
notifiable_id (integer): 通知対象のレコードの id。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User に対して、recipient_id と actor_id を介して2つの関連 (belongs_to :recipient, class_name: "User", belongs_to :actor, class_name: "User")
notifiable_type と notifiable_id で指定された任意のモデルと関連付けられる（ポリモーフィック関連）

7. Category (カテゴリー)
役割: ブログ記事や質問を分類するためのカテゴリー情報を格納するテーブルです。
カラム:
id (integer, 主キー): カテゴリーの一意の識別子。
name (varchar): カテゴリー名（例：「グルメ」、「観光」、「ホテル」など）。
関連:
Blog, Question と多対多 (has_many :categorizables, dependent: :destroy, has_many :blogs, through: :categorizables, source: :categorizable, source_type: 'Blog', has_many :questions, through: :categorizables, source: :categorizable, source_type: 'Question' 中間テーブルは Categorizable, ポリモーフィック関連を使用)

8. Area (エリア)
役割: ブログ記事や質問に関連するエリア情報を格納するテーブルです。
カラム:
id (integer, 主キー): エリアの一意の識別子。
name (varchar): エリア名（例：「東京都」、「大阪府」、「京都府」など）。
関連:
Blog, Question と多対多 (has_many :localizations, dependent: :destroy, has_many :blogs, through: :localizations, source: :localizable, source_type: 'Blog', has_many :questions, through: :localizations, source: :localizable, source_type: 'Question' 中間テーブルは Localization, ポリモーフィック関連を使用)

9. Categorizable (カテゴリー中間テーブル)
役割: Category と Blog または Question の多対多の関連を表現するための中間テーブルです。ポリモーフィック関連を用いています。
カラム:
id (integer, 主キー): 中間テーブルのレコードの一意の識別子。
categorizable_id (integer): 関連するモデル（Blog または Question）の id。
categorizable_type (varchar): 関連するモデルのタイプ（"Blog" または "Question"）。
category_id (integer, 外部キー): 関連するカテゴリーの id。
関連:
Category と1対多 (belongs_to :category)
Blog または Question と1対多 (belongs_to :categorizable, polymorphic: true)

10. Localization (エリア中間テーブル)
役割: Area と Blog または Question の多対多の関連を表現するための中間テーブルです。ポリモーフィック関連を用いています。
カラム:
id (integer, 主キー): 中間テーブルのレコードの一意の識別子。
localizable_id (integer): 関連するモデル（Blog または Question）の id。
localizable_type (varchar): 関連するモデルのタイプ（"Blog" または "Question"）。
area_id (integer, 外部キー): 関連するエリアの id。
関連:
Area と1対多 (belongs_to :area)
Blog または Question と1対多 (belongs_to :localizable, polymorphic: true)

11. BlogLike (ブログいいね)
役割: ユーザーがブログ記事に対して行った「いいね」の情報を格納するテーブルです。
カラム:
id (integer, 主キー): いいねの一意の識別子。
user_id (integer, 外部キー): いいねをしたユーザーの id。
blog_id (integer, 外部キー): いいねされたブログ記事の id。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Blog と1対多 (belongs_to :blog)

12. AnswerLike (回答いいね)
役割: ユーザーが回答に対して行った「いいね」の情報を格納するテーブルです。
カラム:
id (integer, 主キー): いいねの一意の識別子。
user_id (integer, 外部キー): いいねをしたユーザーの id。
answer_id (integer, 外部キー): いいねされた回答の id。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Answer と1対多 (belongs_to :answer)

13. BlogComment (ブログコメント)
役割: ユーザーがブログ記事に対して投稿したコメントの情報を格納するテーブルです。
カラム:
id (integer, 主キー): コメントの一意の識別子。
user_id (integer, 外部キー): コメントを投稿したユーザーの id。
blog_id (integer, 外部キー): コメントが投稿されたブログ記事の id。
body (text): コメントの本文。
created_at (datetime): レコード作成日時。
updated_at (datetime): レコード更新日時。
関連:
User と1対多 (belongs_to :user)
Blog と1対多 (belongs_to :blog)
補足: Active Storage と Action Text 関連のテーブル

14. active_storage_blobs (Active Storage ブロブテーブル)
役割: Active Storage で管理されるファイルのメタデータを格納するテーブルです。
関連: active_storage_attachments, active_storage_variant_records

15. active_storage_attachments (Active Storage 添付ファイルテーブル)
役割: Active Storage で管理されるファイルと、モデルの関連付けを格納する中間テーブルです。
関連: active_storage_blobs, および関連付けられる任意のモデル

16. active_storage_variant_records (Active Storage バリアントレコードテーブル)
役割: Active Storage で生成された画像のバリエーション情報を格納するテーブルです。
関連: active_storage_blobs

17. action_text_rich_texts (Action Text リッチテキストテーブル)
役割: Action Text で作成されたリッチテキストコンテンツを格納するテーブルです。
関連: Blog (ポリモーフィック関連)
