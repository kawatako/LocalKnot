# 使用するベースイメージを指定。Ruby 3.2.3 がインストールされたイメージを使用します。
FROM ruby:3.2.3

# 環境変数 LANG を設定。文字エンコーディングを C.UTF-8 に設定します。
ENV LANG C.UTF-8

# 環境変数 TZ を設定。タイムゾーンを Asia/Tokyo に設定します。
ENV TZ Asia/Tokyo

# apt-get を使ってパッケージリストを更新し、必要なパッケージをインストールします。
# -qq: 出力を最小限に抑えます。
# -y: すべてのプロンプトに自動的に yes と答えます。
RUN apt-get update -qq \
&& apt-get install -y ca-certificates curl gnupg \
# /etc/apt/keyrings ディレクトリを作成します。
&& mkdir -p /etc/apt/keyrings \
# NodeSource の GPG キーをダウンロードし、/etc/apt/keyrings/nodesource.gpg に保存します。
&& curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
# Node.js のメジャーバージョンを設定します。
&& NODE_MAJOR=20 \
# NodeSource のリポジトリを apt のソースリストに追加します。
&& echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
# Yarn の GPG キーをダウンロードし、apt-key に追加します。
&& wget --quiet -O - /tmp/pubkey.gpg https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
# Yarn のリポジトリを apt のソースリストに追加します。
&& echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

# 再度 apt-get を使ってパッケージリストを更新し、必要なパッケージをインストールします。
RUN apt-get update -qq && apt-get install -y build-essential libpq-dev nodejs yarn vim imagemagick

# コンテナ内に /myapp ディレクトリを作成します。
RUN mkdir /myapp

# ワーキングディレクトリを /myapp に設定します。
WORKDIR /myapp

# ユーザーをrubyに設定
ARG UID=1000
ARG GID=1000
RUN groupadd -g "${GID}" ruby \
    && useradd --create-home --no-log-init -u "${UID}" -g "${GID}" ruby \
    && mkdir /node_modules && chown ruby:ruby -R /node_modules /myapp

# USER ruby を bundle install より前に移動
USER ruby

# bundler をインストールします。(USER ruby の後で実行)
RUN gem install bundler

# ホストマシンのGemfile と Gemfile.lockを、コンテナの /myapp ディレクトリにコピーします。
COPY --chown=ruby:ruby Gemfile* /myapp/
# ここで bundle install を実行 (USER ruby で実行)
RUN bundle install

# ホストマシンのpackage.jsonとyarn.lockを、コンテナの /myapp ディレクトリにコピーします。
COPY --chown=ruby:ruby package.json yarn.lock /myapp/
RUN yarn install

# ホストマシンのカレントディレクトリの内容を、コンテナの /myapp ディレクトリにコピーします。
COPY --chown=ruby:ruby . /myapp